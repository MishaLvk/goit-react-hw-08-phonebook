{"version":3,"file":"static/js/601.6bf156d9.chunk.js","mappings":"mOAEaA,EAAOC,EAAAA,GAAAA,KAAH,oWAiBJC,EAAQD,EAAAA,GAAAA,MAAH,4LAWLE,EAAQF,EAAAA,GAAAA,MAAH,0JASLG,EAAeH,EAAAA,GAAAA,OAAH,4a,SCvCZI,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,kBCMpB,SAASC,IACtB,IAAMC,GAAgBC,EAAAA,EAAAA,IAAYN,GAC5BO,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,OAEL,EAmBKC,EAAY,SAAAR,GAChB,IAAMS,EAAmBT,EAAKU,oBAE9B,OAAOf,EAAcgB,MAAK,SAAAC,GAAO,OAC/BA,EAAQZ,KAAKa,cAAcC,SAASL,EADL,GAGlC,EAEKM,EAAQ,WACZd,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAAClB,EAAD,CAAM+B,SA/Ba,SAAAX,GAGnB,GAFAA,EAAMY,iBAEFT,EAAUR,GAEZ,OADAkB,MAAMlB,EAAO,4BACN,EAET,IAAMY,EAAU,CACdZ,KAAMA,EACNE,OAAQA,GAKV,OAFAL,EAASsB,EAAAA,GAA+BP,IACxCG,KACO,CACR,EAgBC,WACE,yCACA,UAAC5B,EAAD,CAAOiC,UAAU,QAAjB,kBAEE,SAAChC,EAAD,CACEiC,KAAK,OACLrB,KAAK,OACLsB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRjB,MAAOP,EACPyB,SAAUrB,EACVsB,YAAY,gBAGhB,UAACvC,EAAD,CAAOiC,UAAU,QAAjB,oBAEE,SAAChC,EAAD,CACEiC,KAAK,MACLrB,KAAK,SACLsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRjB,MAAOL,EACPuB,SAAUrB,EACVsB,YAAY,kBAIhB,SAACrC,EAAD,CAAcgC,KAAK,SAAnB,2BAGL,C,sBCxFYjC,EAAQF,EAAAA,GAAAA,MAAH,mWAkBLC,EAAQD,EAAAA,GAAAA,MAAH,mGChBH,SAASyC,IACtB,IAAMC,GAAchC,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMsC,MAAV,IAC/BhC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC,EAAD,CAAOsB,UAAU,QAAjB,oBAEE,SAAC,EAAD,CAAOC,KAAK,OAAOd,MAAOqB,EAAaH,SAPtB,SAAApB,GACnBR,GAASiC,EAAAA,EAAAA,GAAkBzB,EAAM0B,cAAcxB,OAChD,MAQF,CChBM,I,QAAMyB,EAAc9C,EAAAA,GAAAA,GAAH,iHAQX+C,EAAkB/C,EAAAA,GAAAA,GAAH,2JASfgD,EAAehD,EAAAA,GAAAA,OAAH,0aCTV,SAASiD,IACtB,IAAMP,GAAchC,EAAAA,EAAAA,KAAY,SAAAL,GAAK,OAAIA,EAAMsC,MAAV,IAC/BhC,GAAWC,EAAAA,EAAAA,MAEXH,GAAgBC,EAAAA,EAAAA,IAAYN,GAQlC,OACE,SAAC0C,EAAD,UARqB,WACrB,IAAMvB,EAAmBmB,EAAYlB,oBACrC,OAAOf,EAAckC,QAAO,SAAAjB,GAAO,OACjCA,EAAQZ,KAAKa,cAAcC,SAASL,EADH,GAGpC,CAII2B,GAAiBC,KAAI,SAAAzB,GAAO,OAC3B,UAACqB,EAAD,WACGrB,EAAQZ,KADX,KACmBY,EAAQV,QACzB,SAACgC,EAAD,CACEI,QAAS,kBACPzC,EAASsB,EAAAA,GAAkCP,EAAQ2B,IAD5C,EADX,sBAFoB3B,EAAQ2B,GADH,KAclC,CCpCM,IAAMC,EAAYtD,EAAAA,GAAAA,IAAH,8JASTuD,EAAavD,EAAAA,GAAAA,IAAH,6FAOVwD,EAAWxD,EAAAA,GAAAA,IAAH,+IASRyD,EAAQzD,EAAAA,GAAAA,GAAH,2NClBH,SAAS0D,IACtB,IAAMjD,GAAgBC,EAAAA,EAAAA,IAAYN,GAE5BO,GAAWC,EAAAA,EAAAA,MAUjB,OARA+C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAEvB,OADAlD,EAASsB,EAAAA,GAAkC2B,EAAWE,SAC/C,WACLF,EAAWG,OACZ,CACF,GAAE,CAACpD,KAGF,UAAC2C,EAAD,CAAWpB,UAAU,sBAArB,WACE,UAACqB,EAAD,YACE,SAACE,EAAD,yBACA,SAACjD,EAAD,QAEF,UAACgD,EAAD,YACE,2CAC0B,IAAzB/C,EAAcuD,QACb,iCACE,SAACvB,EAAD,KACA,SAACQ,EAAD,QAGF,uEAKT,C","sources":["components/ContactForm/ContactForm.styled.js","components/redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Phonebook/PhoneBook.styled.js","components/Phonebook/Phonebook.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  flex-direction: column;\n  align-items: flex-start;\n  width: 400px;\n  padding: 10px;\n  margin-top: 20px;\n  display: flex;\n  border: 1px solid white;\n  box-sizing: border-box;\n  max-width: 90%;\n  background: rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  flex-direction: column;\n  align-items: center;\n  color: #e6deca;\n`;\n\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 500;\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n\n  // border-bottom: 1px solid grey;\n`;\n\nexport const Input = styled.input`\n  font-size: 20px;\n  font-weight: 500;\n  border: none;\n  background: rgba(0, 0, 0, 0.2);\n  outline: none;\n  color: #ff6b01;\n`;\n\nexport const SubmitButton = styled.button`\n  display: block;\n  cursor: pointer;\n  text-align: center;\n  margin-left: auto;\n  color: #ffffff;\n  font-weight: 600;\n  padding-left: 5%;\n  padding-right: 5%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  background-color: #ff6b01;\n  border-color: #ff6b01;\n  box-shadow: 0px 8px 43px 0px rgba(255, 107, 1, 0.4);\n  border-radius: 5px;\n  transition: scale 550ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import { useState } from 'react';\nimport { Form, Label, Input, SubmitButton } from './ContactForm.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'components/redux/contacts/selectors';\nimport * as phonebookOperations from 'components/redux/contacts/phonebookOperations';\n\nexport default function ContactForm() {\n  const contactsRedux = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (checkName(name)) {\n      alert(name + ' is already in contacts');\n      return false;\n    }\n    const contact = {\n      name: name,\n      number: number,\n      // key: nanoid(),\n    };\n    dispatch(phonebookOperations.addContact(contact));\n    reset();\n    return true;\n  };\n\n  const checkName = name => {\n    const normalisedFilter = name.toLocaleLowerCase();\n\n    return contactsRedux.some(contact =>\n      contact.name.toLowerCase().includes(normalisedFilter)\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2>Add contact</h2>\n      <Label className=\"Lable\">\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name...\"\n        />\n      </Label>\n      <Label className=\"Lable\">\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n          placeholder=\"xxx-xx-xx\"\n        />\n      </Label>\n\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: flex;\n  align-items: center;\n  padding-bottom: 4px;\n  padding-right: 20px;\n  background-color: transparent;\n  border: none;\n  width: 90%;\n  height: 38px;\n  outline: none;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1.14;\n  color: #ff6b01;\n  border-bottom: 1px solid grey;\n  margin-bottom: 20px;\n`;\n\nexport const Label = styled.label`\n  width: 60%;\n  font-weight: 600;\n  font-size: 18px;\n  color: #e6deca;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilterRedux } from '../redux/filter/filterSlice';\nimport { Input, Label } from './Filter.styled';\n\nexport default function Filter() {\n  const filterValue = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const changeFilter = event => {\n    dispatch(changeFilterRedux(event.currentTarget.value));\n  };\n\n  return (\n    <Label className=\"Lable\">\n      Filter\n      <Input type=\"text\" value={filterValue} onChange={changeFilter}></Input>\n    </Label>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ListContact = styled.ul`\n    display: flex;\n  flex-direction: column;\n  padding-left: 0;\n  min-width: 50%;\n}\n`;\n\nexport const ContactListList = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 7px;\n  font-weight: 600;\n  font-size: 22px;\n  color: black;\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  cursor: pointer;\n  text-align: center;\n  margin-left: auto;\n  color: #ffffff;\n  font-weight: 600;\n  padding-left: 5%;\n  padding-right: 5%;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  background-color: #910101;\n  border-color: black;\n  box-shadow: 0px 8px 43px 0px rgba(255, 107, 1, 0.4);\n  border-radius: 5px;\n  transition: scale 550ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import {\n  ListContact,\n  ContactListList,\n  DeleteButton,\n} from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as phonebookOperations from 'components/redux/contacts/phonebookOperations';\n\nimport { selectContacts } from 'components/redux/contacts/selectors';\n\nexport default function ContactList() {\n  const filterValue = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const contactsRedux = useSelector(selectContacts);\n  const filterContacts = () => {\n    const normalisedFilter = filterValue.toLocaleLowerCase();\n    return contactsRedux.filter(contact =>\n      contact.name.toLowerCase().includes(normalisedFilter)\n    );\n  };\n\n  return (\n    <ListContact>\n      {filterContacts().map(contact => (\n        <ContactListList key={contact.id}>\n          {contact.name}: {contact.number}\n          <DeleteButton\n            onClick={() =>\n              dispatch(phonebookOperations.deleteContact(contact.id))\n            }\n          >\n            Delete\n          </DeleteButton>\n        </ContactListList>\n      ))}\n    </ListContact>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  margin-left: 50px;\n  width: 90%;\n  margin-top: 20px;\n`;\n\nexport const AddContact = styled.div`\n  display: flex;\n\n  justify-content: space-around;\n  width: 50%;\n`;\n\nexport const Contacts = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  justify-content: space-around;\n  padding-left: 30px;\n  width: 50%;\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Container, Title, AddContact, Contacts } from './PhoneBook.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'components/redux/contacts/selectors';\nimport * as phonebookOperations from 'components/redux/contacts/phonebookOperations';\nimport { useEffect } from 'react';\n\nexport default function Phonebook() {\n  const contactsRedux = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    dispatch(phonebookOperations.fetchContacts(controller.signal));\n    return () => {\n      controller.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <Container className=\"Phonebook_container\">\n      <AddContact>\n        <Title>Phonebook</Title>\n        <ContactForm />\n      </AddContact>\n      <Contacts>\n        <h2>Your contacts:</h2>\n        {contactsRedux.length !== 0 ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <p>You don't have any contacts saved yet </p>\n        )}\n      </Contacts>\n    </Container>\n  );\n}\n"],"names":["Form","styled","Label","Input","SubmitButton","selectContacts","state","contacts","items","ContactForm","contactsRedux","useSelector","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","event","target","value","checkName","normalisedFilter","toLocaleLowerCase","some","contact","toLowerCase","includes","reset","onSubmit","preventDefault","alert","phonebookOperations","className","type","pattern","title","required","onChange","placeholder","Filter","filterValue","filter","changeFilterRedux","currentTarget","ListContact","ContactListList","DeleteButton","ContactList","filterContacts","map","onClick","id","Container","AddContact","Contacts","Title","Phonebook","useEffect","controller","AbortController","signal","abort","length"],"sourceRoot":""}